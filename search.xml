<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Iexpress的使用]]></title>
    <url>%2F%2F12.html</url>
    <content type="text"><![CDATA[1. 用它来制作自解压缩包123ctrl+r #进入cmd$ iexpress 2. 如图所示: 一路next …. 即可创建自解压的可执行程序!]]></content>
  </entry>
  <entry>
    <title><![CDATA[主页制作]]></title>
    <url>%2F%2F11.html</url>
    <content type="text"><![CDATA[1. 布局构建: 2. 用html + css新建两个文件:1.index.html2.style.css]]></content>
  </entry>
  <entry>
    <title><![CDATA[无聊]]></title>
    <url>%2F%2F10.html</url>
    <content type="text"><![CDATA[install sygwin fail!! I am not use it!! don’t config for it !help me!]]></content>
  </entry>
  <entry>
    <title><![CDATA[Travis 设置]]></title>
    <url>%2F%2F9.html</url>
    <content type="text"><![CDATA[1. 先用github帐户登陆上去: 待续……….]]></content>
  </entry>
  <entry>
    <title><![CDATA[测试]]></title>
    <url>%2F%2F8.html</url>
    <content type="text"><![CDATA[Hello ! 今天高考!加油! 1234567#include&lt;stdio.h&gt; int main() &#123; printf("你好! 高考!"); return 0; &#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[文章加密方法]]></title>
    <url>%2F%2F7.html</url>
    <content type="text"><![CDATA[1.改写主题下的文件12themes\next\layout\_partials\head\head.swig# 在&lt;meta&gt; 后加最好！ 2. 然后再文章头部：1password: 密码 ok!]]></content>
  </entry>
  <entry>
    <title><![CDATA[我的第三篇 Code!]]></title>
    <url>%2F%2F6.html</url>
    <content type="text"><![CDATA[C code指针与数组，内存的关系1234567891011#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main()&#123; int a[5]=&#123;1,2,3,4,5&#125;,*p=a; printf("数值：%d\n",*p); printf("内存里的地址：%d\n",p); return 0;&#125; 运行结果 如下图：]]></content>
  </entry>
  <entry>
    <title><![CDATA[我的第二篇 Code!]]></title>
    <url>%2F%2F5.html</url>
    <content type="text"><![CDATA[C 列出数组中的所有元素：12345678910#include&lt;stdio.h&gt; int main() &#123; int i=0; for(i=0;i&lt;256;i++) &#123; printf("[%d]:---192.168.1.%d\n",i,i); &#125; return 0; &#125; 运行结果如下:]]></content>
  </entry>
  <entry>
    <title><![CDATA[Links 图标 下载地址]]></title>
    <url>%2F%2F3.html</url>
    <content type="text"><![CDATA[Links: 超链接设置图标的【地址】]]></content>
  </entry>
  <entry>
    <title><![CDATA[Windows7+Archlinux双系统安装指南]]></title>
    <url>%2F%2F2.html</url>
    <content type="text"><![CDATA[声明 本安装指南采用传统BIOS+BMR分区方案+GRUB引导，适用于早期的电脑，现在大多数电脑基本是UEFI+GPT的方案，这种安装方式将再下一篇文章中介绍。虽然Linux对BIOS的分区方案没有严格限制，但是Windows上却有，基于这点考量，最好采用BIOS+MBR或者UEFI+GPT的方式。 安装前准备已经安装好的windows7系统（本文不会教你如何安装windows系统）准备好大小足够的U盘（能制作启动盘即可） 制作启动盘:下载Archlinux镜像点击下载制作启动盘（这里推荐使用rufus）打开运行窗口（快捷键：win + R）输入diskmgmt.msc，打开磁盘管理工具，从原有的磁盘中划分出一部分作为安装Archlinux的分区（如果在安装Windows的时候已经保留了安装分区，那么这步可以省略）重启电脑，进入BIOS，设置第一启动项为U盘并重启电脑安装Archlinux1.连接WIFIArchlinux提供的base中包含netctl、dhcpcd、iw、wpa_supplicant等WiFi连接工具。 在命令行键入wifi-menu连接WiFi，wifi-menu会提供命令行窗口让你选择要连接的wifi。 注意，如果连接失败请尝试手动进行WiFi连接，在命令行输入：123456--------------------- 手动连接WiFi ---------------------------ip link #查看你的网卡接口标识ip link set $iw up # 这里的$iw用上面查出的网卡标识替换，这个命令用于打开网卡接口iw dev $iw scan | less #用于扫描WiFi信息，如果你知道你需要连接WiFi的SSID，那么这一步可以省略wpa_supplicant -B -i $iw -c &lt;(wpa_passphrase $SSID $pass) # $SSID代表你WiFi的ID，$pass代表你的wifi密码iw dev $iw link #查看wifi是否连接成功 WiFi连接成功后，通过命令：dhcpcd $iw来自动分配IP地址。你同样可以手动分配静态IP，在命令行输入:12ip addr add 192.168.1.111/24 broadcast 192.168.1.255 dev $iw #ip地址和子网掩码根据你实际的情况替换ip route add default via 192.168.1.1 dev $iw #设置默认网关 2.基本设置+分区方案+安装Archlinux 磁盘分区： 1234567 ping -c 4 www.baidu.com #如果ping不通，执行（echo 'nameserver 8.8.8.8' &gt;&gt; /etc/resolv.conf）timedatectl set-ntp true #更新系统时钟cfdisk #这个工具会提供一个命令行界面进行分区，根据你的需要进行分区 # / 分区，类型为linux(必须) # /home，类型linux（可选，但建议） # swap,类型为linux swap(swap和系统休眠有关，建议根据你的内存大小分配，内存大的交换分区可以分小点，小的可以分大点。当然，你也可以不分) # 分区完记得写入 设置文件系统123mkfs.ext4 /dev/sdax # 磁盘sdax为你划分的linux分区，可以通过fdisk -l查看详细的分区信息，所有linux类型分区都要刷入ext4文件系统mkswap /dev/sdax # sdax为你所划分的swap分区表示，没有这步可省略swapon /dev/sdax # 开启swap，没有划分swap，这步可省略 挂载linux分区目录123mount /dev/sdax /mnt mkdir /mnt/home #如果没有home分区，这步省略mount /dev/sdax /mnt/home #如果有没有划分home目录的话，这步省略，如果你还划分了其它目录，也是同样的挂载方法 安装Archlinux1234vim /etc/pacman.d/mirrorlist # 把合适的源调整到第一，比如国内，把china源调整到第一 # 这点很重要，不然联网下载包时会很慢pacstrap /mnt basepacstrap /mnt base-devel #安装常用开发工具，可以选择不装，但建议安装 生成分区表文件1genfstab -U /mnt &gt; /mnt/etc/fstab # -U代表用UUID表示分区 切换root1arch-chroot /mnt 基本设置和引导启动安装常用工具123pacman -S vimpacman -S iw wpa_supplicant dialogpacman -S ntfs-3g 设置时区12ln -sf /usr/share/zoneinfo/Region/City /etc/localtime # Region和City根据你的情况修改，在国内为/Asia/ShangHaihwclock --systohc 设置语言环境#先编辑/etc/locale.gen文件，将en_US.UTF-8 UTF-8注释取消掉，编辑工具可以使用vim12locale-gen # 生成其它需要的本地化文件echo 'LANG=en_US.UTF-8' &gt;&gt; /etc/locale.conf 设置hostname1echo 'you host name' &gt; /etc/hostname 设置root密码1passwd 安装微码（非Intel CPU可跳过）1pacman -S intel-ucode 引导系统启动12345678910pacman -S grubchattr -i /boot/grub/i386-pc/core.imggrub-install --target=i386-pc --debug --force /dev/sdaXchattr +i /boot/grub/i386-pc/core.imggrub-mkconfig -o /boot/grub/grub.cfgmy_windows_part=/dev/sdax # sdax代表你的windows C盘目录，一般是sda2my_boot_part=/dev/sdax # sdax代表你的linux /分区目录mkdir -p /media/winmount -t ntfs-3g $my_windows_part /media/windd if=$my_boot_part of=/media/win/linux.bin bs=512 count=1 #这个命令会在你的windows C盘根目录底下生成linux.bin文件 重启进入windows，以管理员的方式打开命令行12345bcdedit /create /d "Linux" /application BOOTSECTOR # 生成启动标识，生成结果就是下面的ID, "Linux"可以替换成任何你想在显示的内容bcdedit /set &#123;ID&#125; device partition=C:bcdedit /set &#123;ID&#125; path \linux.binbcdedit /displayorder &#123;ID&#125; /addlastbcdedit /timeout 30 Finished! 重启即可！作者：我懒得取名链接：]]></content>
  </entry>
  <entry>
    <title><![CDATA[我的第一篇Code!]]></title>
    <url>%2F%2F1.html</url>
    <content type="text"><![CDATA[C语言入门代码：1234567#include&lt;stdio.h&gt; int main() &#123; printf("hello,world!\n"); return 0; &#125;]]></content>
  </entry>
</search>
